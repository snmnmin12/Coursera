#include <iostream>
#include <stdio.h>
using namespace std;
#define maxN 51
int DP1[maxN][maxN];
int DP2[maxN][maxN];
int DP3[maxN][maxN];
void dp1(int N,int k)
{
        for (int i=1; i<=N; i++)
        for (int j=1; j<=k; j++)
    {
        if (j==1 || i==j)
        DP1[i][j]=1;
        else if(i>j )
        DP1[i][j]=DP1[i-1][j-1]+DP1[i-j][j];
    }
}
void dp2(int N,int k){
    
   
    for (int i=1; i<=N;i++)
    for (int j=1;j<=k; j++) {
        DP2[0][j]=0;DP2[i][0]=0;
    }
    for (int i=1; i<=N;i++)
    for (int j=1;j<=k; j++) {
    if (i<j) DP2[i][j]=DP2[i][i];
    else if(i==j) DP2[i][j]=1+DP2[i][j-1];
    else if(i>j)  DP2[i][j]=DP2[i-j][j-1]+DP2[i][j-1];
    
    }
}
void dp3(int N, int k){
    
    for (int i=1; i<=N;i++)
        for (int j=1;j<=k; j++) {
            DP3[0][j]=0;DP3[i][0]=0;
        }
    
    for (int i=1; i<=N;i++)
        for (int j=1;j<=k; j=j+2) {
            if (i<j) DP3[i][j]=DP3[i][i];
            else if (i==j) DP3[i][j]=1+DP3[i][j-1];
            else if (i>j)  DP3[i][j]=DP3[i-j][j]+DP3[i][j-1];
            DP3[i][j+1]=DP3[i][j];
        }
}
int main()
{
    int N,k;
    while(scanf("%d%d",&N,&k)!=EOF){
    dp1(N,k);
    dp2(N,N);
    dp3(N,N);
    printf("%d\n",DP1[N][k]);
    printf("%d\n",DP2[N][N]);
    printf("%d\n",DP3[N][N]);
    }
    return 0;
}