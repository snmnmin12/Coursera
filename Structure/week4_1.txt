#include <stdio.h>
#include <iostream>
#include <map>
#include <cstring>
using namespace std;
bool success=1;
typedef pair<string, int> pstr;
map<string, int> map1;
void initia()
{

    string str[32]={"negative", "zero", "one", "two", "three", "four","five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen","fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty", "thirty", "forty", "fifty","sixty", "seventy", "eighty", "ninety", "hundred", "thousand", "million"};
    int number[31]={0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,30,40,50,60,70,80,90,100,1000,1000000};
    
    map1.insert(pstr(str[0],-1));
    for (int i=1; i<32; i++)
    map1.insert(pstr(str[i],number[i-1]));
}

void stringparse(string &s){
 
    size_t i=s.length()-1;
    size_t end=s.length();
    bool negative=false;
    int currentUnit=1;
    int nextUnit=1;
    map<string, int>::iterator it;
    string temp;
    int temp2=0;
    int num=0;
    while (1)
    {
 
        if (i==-1)
        {
            if (negative) cout<<-num<<endl;
            else cout<<num<<endl;
            break;
        }

        if ( s[i]==' '|| i==0)
        {
            if (i!=0)
            temp=s.substr(i+1,end-i-1);
            else
                temp=s.substr(i,end-i);
            if (temp=="negative") negative=true;
            else
            {
                it=map1.find(temp);
                if (temp=="hundred"||temp=="thousand"|| temp=="million")
                {
                    nextUnit=it->second;
                    if (currentUnit<it->second){
                    currentUnit=it->second;
                        nextUnit=1;
                    }
                }
                else
                {
                    temp2=it->second*nextUnit;
                    num+=temp2*currentUnit;
                }
            }
            
            end=i;
        }
        i--;
    }
    
}

int main(){
    initia();
    string input;
    while(getline(cin, input),!input.empty())
    stringparse(input);
    return 0;
}